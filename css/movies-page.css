/* css/movies-page.css */

.movies-archive-page .page-header {
  text-align: center;
  margin-bottom: 30px;
  padding-top: 20px;
}

.movies-archive-page .page-header h1 {
  font-size: 2.5em;
  color: #e50914; /* Акцентный цвет */
}

.filters-and-sorting-panel {
  background-color: #1c1c1c; /* Фон панели */
  padding: 20px;
  border-radius: 8px;
  margin-bottom: 30px;
  display: flex;
  flex-wrap: wrap; /* Для адаптивности */
  gap: 25px;
  align-items: flex-end; /* Выравниваем элементы по низу, если они разной высоты */
}

.sort-control, .genre-filter {
  margin-bottom: 15px; /* Отступ для мобильных, когда они друг под другом */
}

.sort-control label, .genre-filter h3 {
  display: block;
  margin-bottom: 8px;
  font-size: 0.95em;
  color: #ccc;
  font-weight: 500;
}

.sort-control select {
  padding: 8px 12px;
  background-color: #333;
  color: #e5e5e5;
  border: 1px solid #444;
  border-radius: 4px;
  font-size: 0.9em;
  min-width: 200px; /* Минимальная ширина селекта */
}

.genre-filter h3 {
  margin-bottom: 10px;
}

.genre-checkboxes {
  display: flex;
  flex-wrap: wrap;
  gap: 10px 15px; /* Отступы между чекбоксами */
}

.genre-checkboxes label {
  display: flex;
  align-items: center;
  cursor: pointer;
  font-size: 0.9em;
  color: #ddd;
  padding: 5px 8px;
  background-color: #2a2a2a;
  border-radius: 4px;
  transition: background-color 0.2s ease;
}

.genre-checkboxes label:hover {
  background-color: #383838;
}

.genre-checkboxes input[type="checkbox"] {
  margin-right: 6px;
  accent-color: #e50914; /* Цвет "галочки" */
}

#reset-filters-btn {
  /* Стили .btn.btn-secondary.btn-small уже должны быть,
     но можно добавить margin-left: auto; чтобы прижать кнопку вправо, если нужно */
  margin-left: auto; /* Если панель в одну строку, кнопка будет справа */
  align-self: flex-end; /* Выравниваем кнопку по низу с селектом */
}

/* Стили для сетки фильмов .movies-grid и .movie-card берутся из style.css */

.pagination-controls {
  margin-top: 40px;
  text-align: center;
  /* Стили для кнопок пагинации добавим позже */
}

/* Адаптивность для панели фильтров */
@media (max-width: 768px) {
  .filters-and-sorting-panel {
      flex-direction: column; /* Фильтры друг под другом */
      align-items: stretch; /* Растягиваем по ширине */
  }
  .sort-control select {
      width: 100%; /* Селект на всю ширину */
  }
  #reset-filters-btn {
      margin-left: 0; /* Убираем авто-отступ */
      margin-top: 10px; /* Добавляем отступ сверху */
      width: 100%; /* Кнопка на всю ширину */
  }
}

.pagination-controls {
  margin-top: 40px;
  text-align: center;
  padding-bottom: 20px; /* Дополнительный отступ снизу */
}

.btn-pagination {
  background-color: #2a2a2a;
  color: #ccc;
  border: 1px solid #444;
  padding: 8px 12px;
  margin: 0 4px;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.9em;
  transition: background-color 0.2s ease, color 0.2s ease;
}

.btn-pagination:hover {
  background-color: #383838;
  color: #fff;
}

.btn-pagination.active {
  background-color: #e50914; /* Акцентный цвет */
  color: white;
  border-color: #e50914;
  cursor: default;
}
/* css/movies-page.css */
/* ... (существующие стили) ... */

.genre-filter {
  /* Можно добавить flex-grow, чтобы этот блок занимал больше места, если нужно */
  /* flex-grow: 1; */
}

.genre-filter h3 {
  margin-bottom: 12px; /* Чуть больше отступ */
}

.genre-checkboxes {
  display: flex;
  flex-wrap: wrap;
  gap: 10px; /* Уменьшим общий gap, т.к. у label будут свои отступы */
}

.genre-checkboxes label {
  display: inline-block; /* Изменяем с flex на inline-block для тего-подобного вида */
  cursor: pointer;
  font-size: 0.85em; /* Размер текста жанра */
  color: #ccc;
  background-color: #2a2a2a;
  border: 1px solid #383838;
  padding: 6px 12px; /* Отступы внутри "кнопки" */
  border-radius: 15px; /* Более скругленные углы для вида тега/пилюли */
  transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;
  user-select: none; /* Чтобы текст не выделялся при клике */
}

.genre-checkboxes label:hover {
  background-color: #3a3a3a;
  border-color: #555;
  color: #fff;
}

/* Скрываем стандартный чекбокс */
.genre-checkboxes input[type="checkbox"] {
  display: none; 
}

/* Стили для "выбранного" жанра */
.genre-checkboxes input[type="checkbox"]:checked + span { 
  /* Этот селектор не сработает, так как span у нас теперь не соседний, 
     мы будем стилизовать сам label через JS или по-другому */
}

/* Новый подход: стилизуем сам label, когда чекбокс внутри него выбран */
.genre-checkboxes label input[type="checkbox"]:checked ~ span {
  /* Этот тоже не очень удобен, если span не прямой потомок */
}

/* Лучше всего стилизовать сам label, когда его внутренний чекбокс :checked.
 Это можно сделать, если JS будет добавлять класс к label, или если обернуть текст в span ПОСЛЕ чекбокса.
 В нашем текущем JS (populateGenreFilters) текст добавляется после чекбокса.
 Поэтому можно попробовать так: */

.genre-checkboxes input[type="checkbox"]:checked + span { /* Это если бы span был сразу после input */
  /* Не сработает с текущим label.appendChild(document.createTextNode(" " + genreName)); */
}

/* Давай изменим populateGenreFilters, чтобы текст был в span, и добавим класс к label */
/* ИЛИ ПРОЩЕ: Стилизуем сам label, когда он содержит checked input (CSS :has() пока не везде) */
/* Будем добавлять класс 'active' к label через JS */

.genre-checkboxes label.active { /* Этот класс будем добавлять/удалять JS */
  background-color: #e50914; /* Акцентный цвет для выбранного жанра */
  color: #fff;
  border-color: #e50914;
}
.genre-checkboxes label.active:hover {
  background-color: #c00711; /* Темнее при наведении на активный */
  border-color: #c00711;
}



#reset-filters-btn {
  padding: 8px 15px; /* Стандартные отступы для .btn-small */
  font-size: 0.85em;
  background-color: #444; /* Немного другой фон */
  border-color: #555;
  color: #ccc;
  /* margin-left: auto; - если панель фильтров в одну строку и кнопка справа */
}

#reset-filters-btn:hover {
  background-color: #555;
  border-color: #666;
  color: #fff;
}
/* В style.css */

/* ... (другие стили для .movie-card, .movie-info) ... */

.movie-rating {
  font-size: 0.9em;
  color: #f5c518; /* Желтый для рейтинга и для звезды по умолчанию (из-за currentColor) */
  font-weight: bold;
  margin-top: auto; /* Прижимает рейтинг к низу карточки */
  padding-top: 8px;
  display: flex;
  align-items: center;
}
.movie-rating .icon-star {
  width: 2em;    /* Или другой размер, который тебе нравится, например, 1.1em, 1.2em */
  height: 2em;   /* Сделаем их одинаковыми, так как звезда обычно вписывается в квадрат */
  fill: currentColor;
  margin-right: 5px;
  vertical-align: middle; /* Попробуй добавить для лучшего выравнивания с текстом */
}

.movie-rating span {
  line-height: 1; 
  vertical-align: middle; 
}

.genre-filter {
  flex-grow: 1; /* Позволим блоку жанров занять доступное пространство */
  min-width: 250px; /* Минимальная ширина, чтобы не сжимался слишком сильно */
}

.genre-filter h3 {
display: block;
margin-bottom: 12px; /* Увеличил отступ */
font-size: 0.95em;
color: #ccc;
font-weight: 500;
}

.genre-checkboxes {
display: flex;
flex-wrap: wrap; /* Оставляем перенос */
gap: 8px 12px;   /* Немного скорректировал gap */
}

.genre-checkboxes label {
display: inline-flex; /* Используем inline-flex для лучшего выравнивания чекбокса и текста */
align-items: center;
cursor: pointer;
font-size: 0.85em;
color: #ccc;
background-color: #2a2a2a;
border: 1px solid #383838;
padding: 6px 12px;
border-radius: 15px; /* Оставляем скругленные */
transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;
user-select: none;
}

.genre-checkboxes label:hover {
background-color: #3a3a3a;
border-color: #555;
color: #fff;
}

/* Скрываем стандартный чекбокс */
.genre-checkboxes input[type="checkbox"] {
display: none; /* Прячем сам чекбокс */
}

/* Стиль для активного/выбранного жанра (класс 'active' добавляется JS) */
.genre-checkboxes label.active {
background-color: #e50914; /* Акцентный цвет */
color: #fff;
border-color: #e50914;
}

.genre-checkboxes label.active:hover {
background-color: #c00711; /* Темнее при наведении на активный */
border-color: #c00711;
}
.stars-interactive .star-icon.interactive.half-selected-temp {
  fill: #FFD700; /* Другой оттенок желтого для полу-звезды при наведении */
}

.stars-interactive {
  display: flex;
  gap: 2px; /* Очень маленький отступ между "контейнерами" звезд */
  cursor: pointer;
  margin-bottom: 5px;
  position: relative; /* Для псевдоэлементов, если будем их использовать */
}

.stars-interactive .star-icon-wrapper { /* Новый элемент-обертка для каждой звезды */
  position: relative; /* Для позиционирования закрашенной части */
  display: inline-block; /* Чтобы обертки шли в ряд */
}

.stars-interactive .star-icon.interactive {
  width: 28px;
  height: 28px;
  /* Базовый цвет "пустой" звезды - контур */
  stroke: #777; /* Цвет контура пустой звезды */
  stroke-width: 1.5px; /* Толщина контура */
  fill: none;     /* Пустая внутри */
  display: block; /* Убираем лишние отступы под SVG */
  z-index: 1;     /* Сама иконка (контур) */
  position: relative;
}

/* Псевдоэлемент для закрашивания. Мы будем использовать JS, чтобы добавлять inline style clip-path */
/* Или можно через классы */

.stars-interactive .star-icon.interactive.filled,
.stars-interactive .star-icon.interactive.half-filled {
  stroke: #f5c518; /* Цвет контура закрашенной звезды */
  /* fill будет управляться классами или JS для clip-path */
}

.stars-interactive .star-icon.interactive.filled {
  fill: #f5c518; /* Полностью закрашена */
}

.stars-interactive .star-icon.interactive.half-filled {
  /* Для этого варианта нам нужен будет способ показать только половину fill.
     Проще всего сделать это, если сама SVG иконка состоит из двух половинок,
     или использовать overlay.
     Давай упростим: JS будет добавлять класс .selected или .hover,
     а для полузвезды мы будем использовать другой SVG или модифицировать fill через JS.

     Для чистого CSS с одной SVG и <use> - это сложно.
     Поэтому JS будет просто добавлять классы .selected (для полной) и .hover (для полной при наведении)
     А для половинчатых JS будет выставлять ТЕКСТ оценки, а звезды будут подсвечиваться до ближайшей ЦЕЛОЙ меньшей.
     Либо, если мы хотим визуал половинок, то JS должен будет напрямую менять fill SVG через градиент.
  */
}


/* Обновленные стили для hover и selected, которые будет ставить JS */
.stars-interactive .star-icon.interactive.hover {
  fill: #d4a100; /* Цвет подсветки при наведении (темно-желтый) */
  stroke: #d4a100;
}

.stars-interactive .star-icon.interactive.selected {
  fill: #f5c518; /* Ярко-желтый для выбранных */
  stroke: #f5c518;
}
.stars-interactive .star-icon.interactive {
  /* ... твои существующие стили для пустой звезды (stroke, fill:none) ... */
  stroke: #777;
  fill: none; /* Важно, чтобы градиент не перекрывался сплошной заливкой */
  stroke-width: 1.5px;
}

.stars-interactive .star-icon.interactive.selected,
.stars-interactive .star-icon.interactive.hover {
  stroke: #f5c518; /* Контур для закрашенных/ховерных */
}

.stars-interactive .star-icon.interactive.selected {
  fill: #f5c518; /* Полностью закрашенная выбранная */
}
.stars-interactive .star-icon.interactive.hover {
  fill: #d4a100; /* Полностью закрашенная при наведении */
}

/* Для ПОЛОВИНЧАТОЙ ВЫБРАННОЙ звезды */
.stars-interactive .star-icon.interactive.half-selected {
  stroke: #f5c518; /* Контур */
  /* Пытаемся закрасить половину градиентом */
  fill: linear-gradient(to right, #f5c518 50%, transparent 50.1%); 
  /* transparent или цвет фона .user-rating-widget, если fill:none не работает с градиентом */
}

/* Для ПОЛОВИНЧАТОЙ звезды ПРИ НАВЕДЕНИИ */
.stars-interactive .star-icon.interactive.half-hover {
  stroke: #d4a100; /* Контур */
  fill: linear-gradient(to right, #d4a100 50%, transparent 50.1%);
}

/* css/movie-details.css */

/* ... (существующие стили для .movie-details-page, .movie-backdrop-section и т.д.) ... */

.user-rating-widget {
  margin-top: 25px;
  padding-top: 20px;
  border-top: 1px solid #2f2f2f;
  /* visibility: hidden; /* Управляется JS через display: none/block */
}

.user-rating-widget h3 {
  font-size: 1.2em;
  color: #e0e0e0;
  margin-bottom: 10px;
}

.stars-interactive {
  display: flex;
  gap: 2px;
  cursor: pointer;
  margin-bottom: 5px;
}

.stars-interactive .star-icon.interactive {
  width: 28px;
  height: 28px;
  stroke: #777; /* Контур пустой звезды */
  stroke-width: 1.5px;
  fill: none;   /* Пустая внутри */
  display: block;
  transition: fill 0.1s ease-in-out, stroke 0.1s ease-in-out; /* Плавный переход */
}

/* Состояния звезд, управляемые JS */
.stars-interactive .star-icon.interactive.hover {
  fill: #d4a100; /* Цвет подсветки при наведении на всю звезду */
  stroke: #d4a100;
}

.stars-interactive .star-icon.interactive.selected {
  fill: #f5c518; /* Ярко-желтый для выбранных целых звезд */
  stroke: #f5c518;
}

/* Стили для ПОЛОВИНЧАТЫХ звезд (требуют JS для установки класса) */
.stars-interactive .star-icon.interactive.half-hover,
.stars-interactive .star-icon.interactive.half-selected {
  stroke: #f5c518; /* Контур как у закрашенной */
  /* Для отображения половины используем линейный градиент.
     Цвет фона должен совпадать с цветом НЕзакрашенной части звезды или быть transparent.
     В данном случае, fill:none у базового стиля звезды, поэтому transparent подойдет. */
}

.stars-interactive .star-icon.interactive.half-hover {
  fill: linear-gradient(to right, #d4a100 50%, transparent 50.1%);
  stroke: #d4a100;
}

.stars-interactive .star-icon.interactive.half-selected {
  fill: linear-gradient(to right, #f5c518 50%, transparent 50.1%);
  stroke: #f5c518;
}


.current-rating-text {
  color: #aaa;
  font-size: 0.9em;
  min-height: 1.2em;
  margin-top: 5px;
}

.user-rating-widget .btn-small {
  padding: 6px 12px;
  font-size: 0.9em;
  margin-top:10px; /* Добавил, чтобы кнопка была ниже текста оценки */
}
#user-rating-message {
  margin-top:10px; /* Отступ для сообщения об ошибке/успехе */
}

/* ... (остальной CSS для movie-details.css) ... */